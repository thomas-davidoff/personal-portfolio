[
      {
    "title": "Rokuctl",
    "technologies": ["Python"],
    "links": [
      {
        "label": "Github",
        "destination": "https://github.com/thomas-davidoff/rokuctl",
        "type": "github"
      }
    ],
    "description": "The Roku app absolutely sucks so I made my own remote. Added a few aliases to my rc file, and some shortcuts to get to my favorite show with a basic command. Discovery via SSDP and control via the exposed api. I don't actually use this anymore since I segmented my home network and don't bother connecting to my IoT network. Bought a remote instead.",
    "isFeatured": true
  },
  {
    "title": "Personal Finance API",
    "technologies": ["Flask", "Python", "Docker"],
    "links": [
      {
        "label": "Github",
        "destination": "https://github.com/thomas-davidoff/perfi",
        "type": "github"
      }
    ],
    "description": "I developed front-end features too quickly during the first-attempt and it got unmanagemable. Second go-around was purely an API and has the basics more fleshed out (auth, testing, environment management, etc).",
    "isFeatured": true
  },
    {
    "title": "thomasdavidoff.com - Personal Portfolio",
    "technologies": ["React", "js"],
    "links": [
      {
        "label": "Github",
        "destination": "https://github.com/thomas-davidoff/personal-portfolio",
        "type": "github"
      },
      {
        "label": "Homepage",
        "destination": "https://thomasdavidoff.com",
        "type": "website"
      }
    ],
    "description": "You're looking at it rn.",
    "isFeatured": false
  },
  {
    "title": "Personal Finance App",
    "technologies": ["Flask", "React", "Redux Toolkit (RTK)", "SQLite", "SQLAlchemy"],
    "links": [
      {
        "label": "Github",
        "destination": "https://github.com/thomas-davidoff/personal-finance",
        "type": "github"
      }
    ],
    "description": "Description not coming soon. Deprecated project.",
    "isFeatured": false
  },
  {
    "title": "Prunalyzer",
    "technologies": ["Python", "Streamlit"],
    "links": [
      {
        "label": "Github",
        "destination": "https://github.com/thomas-davidoff/Prunalyzer",
        "type": "github"
      }
    ],
    "description": "Description coming soon.",
    "isFeatured": false
  },
  {
    "title": "ADM PT Appointment Reminder Bot",
    "technologies": ["Python", "GoogleAPI", "Shell"],
    "links": [
      {
        "label": "Github",
        "destination": "https://github.com/thomas-davidoff/ADM-Reminder-Bot",
        "type": "github"
      },
      {
        "label": "Info",
        "destination": "https://github.com/thomas-davidoff/ADM-Reminder-Bot",
        "type": "website"
      }
    ],
    "description": "This is a bot which leverages Google APIs to connect to a live sheet containing *non-protected* physical therapy appointment information, and sends appointment reminders to the holders. It aims to reduce rates of missed appointments simply due to forgetting they are scheduled. \n\n The bot connects to the sheet via OAuth2 using a generated token and an account which has access to the sheet. It parses the appointment data into a Pandas dataframe, filters the appointments by date, and compiles a list of newly created appointments (new data that did not exist in the last run) that occur on the day of the run or the next. It then connects to the Gmail API through the same process (OAuth2) and individually sends the appointment holders an email reminding them of their appointment, using a pre-formatted HTML template. No action is taken in the case where no new or upcoming appointments are found. \n\n The script is hosted on a free plan on PythonAnywhere, where it runs every day via built-in scheduling functionality similar to a Cronjob.",
    "isFeatured": false
  }
]
